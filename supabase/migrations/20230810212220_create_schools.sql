create table public.schools (
  school_id bigint generated by default as identity not null primary key,
  slug text not null unique,

  school_name text not null,
  description text,

  address_full text,
  address_street text,
  address_city text,
  address_state text,
  address_zipcode text, -- is integer best ?
  location geography(POINT),

  -- Is there a better way to do this? (bounding box ?)
  search_area_upper geography(POINT),
  search_area_lower geography(POINT),

  logo_img_src text
);

alter table profiles
  add column school_id bigint references schools(school_id) on delete set null;

-- Grab School with GeoJSON
-- create or replace
--   function public.school_with_location(selected_school_slug text)
-- returns Table (school_name text, coordinates text, logo_img_src text)
-- language plpgsql
-- as $$
-- begin
--   return query
--     -- TODO: Return coordinats as [lat, lng] rather than POINT(x y)
--     select s.school_name, st_astext(s.location) as coordinates, s.logo_img_src
--     from schools s
--     where s.slug = selected_school_slug;
-- end;
-- $$;

-- Grab Listings with GeoJSON
create or replace function school_with_geojson(selected_school_slug text)
returns JSON
language sql
as $$
  SELECT json_build_object(
	  'type', 'FeatureCollection',
	  'features', json_agg(ST_AsGeoJSON(t.*)::json)
  )
  FROM (select s.school_name, s.location, s.logo_img_src from schools s where s.slug = selected_school_slug) as t;
$$;

CREATE INDEX if not exists "listings_geo_index" ON "public"."listings" USING "gist" ("location");